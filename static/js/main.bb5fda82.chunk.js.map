{"version":3,"sources":["components/user-item/user-item.js","components/user-list/user-actions.js","components/user-list/user-list.js","components/home/home.js","components/header/header.js","App.js","serviceWorker.js","index.js"],"names":["styles","StyleSheet","create","row","flexDirection","justifyContent","alignItems","padding","marginBottom","backgroundColor","borderBottomWidth","hairlineWidth","borderBottomColor","rowIcon","width","height","marginRight","borderRadius","boxShadow","rowData","flex","rowDataText","fontSize","textTransform","color","rowDataSubText","opacity","marginTop","UserItem","_ref","user","item","react_default","a","createElement","View","style","Image","source","picture","medium","Text","concat","name","title","first","last","email","actionsContainer","actionButton","marginLeft","actionButtonDestructive","actionButtonText","textAlign","UserActions","TouchableHighlight","onPress","Alert","alert","UserList","users","SwipeableFlatList","data","bounceFirstRowOnMount","maxSwipeDistance","renderItem","renderQuickActions","Home","state","loading","this","getUsers","fetch","res","json","results","console","log","setState","Object","toConsumableArray","ScrollView","noSpacer","noScroll","container","ActivityIndicator","centering","size","user_list","React","Component","headerContainer","header","paddingVertical","minHeight","headerCenter","order","headerLeft","headerRight","fontWeight","Header","onBack","SafeAreaView","accessibilityRole","aria-level","App","appContainer","home","AppRegistry","registerComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb5fda82.chunk.js","sourcesContent":["import React from \"react\";\nimport { View, Image, Text, StyleSheet } from \"react-native\";\n\nconst UserItem = ({ item: user }) => {\n\treturn (\n\t\t<View style={styles.row}>\n\t\t\t<Image style={styles.rowIcon} source={user.picture.medium} />\n\t\t\t<View style={styles.rowData}>\n\t\t\t\t<Text style={styles.rowDataText}>{`${user.name.title} ${\n\t\t\t\t\tuser.name.first\n\t\t\t\t} ${user.name.last}`}</Text>\n\t\t\t\t<Text style={styles.rowDataSubText}>{user.email}</Text>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\trow: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tpadding: 15,\n\t\tmarginBottom: 5,\n\t\tbackgroundColor: \"white\",\n\t\tborderBottomWidth: StyleSheet.hairlineWidth,\n\t\tborderBottomColor: \"rgba(0,0,0,0.1)\"\n\t},\n\trowIcon: {\n\t\twidth: 64,\n\t\theight: 64,\n\t\tmarginRight: 20,\n\t\tborderRadius: \"50%\",\n\t\tboxShadow: \"0 1px 2px 0 rgba(0,0,0,0.1)\"\n\t},\n\trowData: {\n\t\tflex: 1\n\t},\n\trowDataText: {\n\t\tfontSize: 15,\n\t\ttextTransform: \"capitalize\",\n\t\tcolor: \"#4b4b4b\"\n\t},\n\trowDataSubText: {\n\t\tfontSize: 13,\n\t\topacity: 0.8,\n\t\tcolor: \"#a8a689\",\n\t\tmarginTop: 4\n\t}\n});\n\nexport default UserItem;\n","import React from \"react\";\nimport {\n\tView,\n\tTouchableHighlight,\n\tText,\n\tAlert,\n\tStyleSheet\n} from \"react-native\";\n\nconst styles = StyleSheet.create({\n\tactionsContainer: {\n\t\tflex: 1,\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"flex-end\",\n\t\talignItems: \"center\",\n\t\tpadding: 10\n\t},\n\tactionButton: {\n\t\tpadding: 10,\n\t\tcolor: \"white\",\n\t\tborderRadius: 6,\n\t\twidth: 80,\n\t\tbackgroundColor: \"#808080\",\n\t\tmarginRight: 5,\n\t\tmarginLeft: 5\n\t},\n\tactionButtonDestructive: {\n\t\tbackgroundColor: \"#ff4b21\"\n\t},\n\tactionButtonText: {\n\t\ttextAlign: \"center\"\n\t}\n});\n\nconst UserActions = () => {\n\treturn (\n\t\t<View style={styles.actionsContainer}>\n\t\t\t<TouchableHighlight\n\t\t\t\tstyle={styles.actionButton}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tAlert.alert(\"Tips\", \"You could do something with this edit action!\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text style={styles.actionButtonText}>Edit</Text>\n\t\t\t</TouchableHighlight>\n\t\t\t<TouchableHighlight\n\t\t\t\tstyle={[styles.actionButton, styles.actionButtonDestructive]}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tAlert.alert(\n\t\t\t\t\t\t\"Tips\",\n\t\t\t\t\t\t\"You could do something with this remove action!\"\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text style={styles.actionButtonText}>Remove</Text>\n\t\t\t</TouchableHighlight>\n\t\t</View>\n\t);\n};\n\nexport default UserActions;\n","import React from \"react\";\nimport { SwipeableFlatList } from \"react-native\";\nimport UserItem from \"../user-item\";\nimport UserActions from \"./user-actions\";\n\nconst UserList = ({ users }) => {\n\treturn (\n\t\t<SwipeableFlatList\n\t\t\tdata={users}\n\t\t\tbounceFirstRowOnMount={true}\n\t\t\tmaxSwipeDistance={160}\n\t\t\trenderItem={UserItem}\n\t\t\trenderQuickActions={UserActions}\n\t\t/>\n\t);\n};\n\nexport default UserList;\n","import React from \"react\";\nimport { ScrollView, ActivityIndicator, StyleSheet } from \"react-native\";\nimport UserList from \"../user-list\";\n// import { AUTHORS } from \"./author\";\n\nclass Home extends React.Component {\n\tstate = {\n\t\tusers: [],\n\t\tloading: true\n\t};\n\tcomponentDidMount() {\n\t\t// TODO: get users\n\t\tthis.getUsers();\n\t}\n\n\tasync getUsers() {\n\t\tconst res = await fetch(\"https://randomuser.me/api/?results=20\");\n\t\tconst { results } = await res.json();\n\t\tconsole.log(results);\n\t\tthis.setState({ users: [...results], loading: false });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ScrollView noSpacer={true} noScroll={true} style={styles.container}>\n\t\t\t\t{this.state.loading ? (\n\t\t\t\t\t<ActivityIndicator\n\t\t\t\t\t\tstyle={[styles.centering]}\n\t\t\t\t\t\tcolor=\"#ff8179\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<UserList users={this.state.users} />\n\t\t\t\t)}\n\t\t\t</ScrollView>\n\t\t);\n\t}\n}\n\nvar styles = StyleSheet.create({\n\tcontainer: {\n\t\tbackgroundColor: \"whitesmoke\"\n\t},\n\tcentering: {\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tpadding: 8,\n\t\theight: \"100vh\"\n\t}\n});\n\nexport default Home;\n","import React from \"react\";\nimport { SafeAreaView, View, Text, StyleSheet } from \"react-native\";\n\nconst Header = ({ onBack, title }) => (\n\t<SafeAreaView style={styles.headerContainer}>\n\t\t<View style={styles.header}>\n\t\t\t<View style={styles.headerCenter}>\n\t\t\t\t<Text accessibilityRole=\"heading\" aria-level=\"3\" style={styles.title}>\n\t\t\t\t\t{title}\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t</View>\n\t</SafeAreaView>\n);\n\nconst styles = StyleSheet.create({\n\theaderContainer: {\n\t\tborderBottomWidth: StyleSheet.hairlineWidth,\n\t\tborderBottomColor: \"#ff4e3f\",\n\t\tbackgroundColor: \"#ff8179\"\n\t},\n\theader: {\n\t\tpadding: 10,\n\t\tpaddingVertical: 5,\n\t\talignItems: \"center\",\n\t\tflexDirection: \"row\",\n\t\tminHeight: 50\n\t},\n\theaderCenter: {\n\t\tflex: 1,\n\t\torder: 2\n\t},\n\theaderLeft: {\n\t\torder: 1,\n\t\twidth: 80\n\t},\n\theaderRight: {\n\t\torder: 3,\n\t\twidth: 80\n\t},\n\ttitle: {\n\t\tfontSize: 19,\n\t\tfontWeight: \"600\",\n\t\ttextAlign: \"center\",\n\t\tcolor: \"white\"\n\t}\n});\n\nexport default Header;\n","import React from \"react\";\nimport { AppRegistry, StyleSheet, View } from \"react-native\";\nimport Home from \"./components/home\";\nimport Header from \"./components/header\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<View style={styles.appContainer}>\n\t\t\t\t<Header title=\"Some People\" />\n\t\t\t\t<Home />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tappContainer: {\n\t\tflex: 1\n\t}\n});\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}